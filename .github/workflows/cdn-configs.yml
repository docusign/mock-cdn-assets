# The goal of this GitHub Actions workflow is to sync specific folders (FOLDERS_TO_SYNC) to Akamai NetStorage 1FE and purge the Akamai cache.
name: Sync Folders to 1FE Netstorage and Purge Akamai Cache

on:
  push:
    branches:
      - main
    paths:
      # Only changes made to the files in the specified folders will trigger this workflow
      # If FOLDERS_TO_SYNC changes, we need to update these to match
      - 'integration/**' 
      - 'production/**'
  pull_request:
    branches:
      - main  

jobs:
  upload-and-purge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Tools and Prepare Credentials
        run: |
          set -e
          
          # Akamai CLI and Purge Module
          echo "Installing Akamai CLI and Purge module..."
          curl -sL https://github.com/akamai/cli/releases/download/v2.0.0/akamai-v2.0.0-linuxamd64 -o akamai
          chmod +x akamai
          sudo mv akamai /usr/local/bin/
          akamai install purge # Only installing purge module
          
          # Akamai API Credentials for Purge (needed for .edgerc)
          echo "Creating .edgerc for Akamai API access..."
          echo "[ccu]
          client_secret = ${{ secrets.AKAMAI_API_CLIENT_SECRET }}
          host = ${{ secrets.AKAMAI_API_CLIENT_HOST }}
          access_token = ${{ secrets.AKAMAI_API_CLIENT_ACCESS_TOKEN }}
          client_token = ${{ secrets.AKAMAI_API_CLIENT_CLIENT_TOKEN }}" > ~/.edgerc

          # Install rsync
          echo "Installing rsync..."
          sudo apt-get update -q
          sudo apt-get install -y -q rsync
          
          # Prepare SSH key for rsync
          echo "Setting up SSH key for rsync..."
          echo "${{ secrets.AKAMAI_NS_SSH_PRIVATE_KEY }}" > $HOME/key.pem
          chmod 600 $HOME/key.pem
          echo "Tool setup and credential preparation complete."

      - name: Sync Specified Folders to NetStorage
        env:
          FOLDERS_TO_SYNC: "integration production" 
        run: |
          # This script will attempt to sync all folders and continue even if rsync reports errors.
          echo "Starting sync for folders: $FOLDERS_TO_SYNC to Akamai NetStorage..."

          for folder_name in $FOLDERS_TO_SYNC; do
            # Check if the local source directory exists
            if [ ! -d "$folder_name" ]; then
              echo "WARNING: Local source directory '$folder_name' not found. Skipping sync for this folder."
              continue 
            fi
            
            echo "  Syncing '$folder_name/'..."
            rsync -avv --delete \
              -e "ssh -o StrictHostKeyChecking=no -i $HOME/key.pem" \
              "$folder_name/" \
              "sshacs@1fe.rsync.upload.akamai.com:$folder_name/" \
            || echo "WARNING: rsync for '$folder_name' finished with a non-zero exit code ($?). The workflow continued, but please check rsync logs above for any errors (e.g., 'failed to set times', or more critical issues)."
            # The '|| echo ...' ensures that even if rsync fails (non-zero exit), 
          done
          echo "Sync to NetStorage attempts complete for all specified folders. Review logs for any rsync warnings or errors."

      - name: Purge Akamai Cache by Cache Tag
        run: |
          set -e
          echo "Purging Akamai cache for tag '1fe'..."
          akamai purge invalidate --tag 1fe